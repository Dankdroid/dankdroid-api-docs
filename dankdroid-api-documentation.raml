#%RAML 1.0
---
title: Dankdroid API
baseUri: https://api.dankdroid.xyz/{version}
version: v1

types:
  error:
    type: object
    properties: 
      status:
        type: number
        required: true
        description: Response status code
      message:
        type: string
        required: false
        description: Error message
      requestUrl:
        type: string
        required: true
        description: The request url
      timestamp:
        type: datetime
        required: true
        description: The exact time the error occurred
  generatedImage:
    type: file
    fileTypes: ['image/png', 'image/jpeg']
  staticImage:
    type: object
    properties: 
      id:
        type: string
        required: true
        description: The static image's unique identifier
      category:
        type: string
        required: true
        description: The static image's category
      url:
        type: string
        required: true
        description: The static image's CDN url
  item:
    type: object
    properties: 
      id:
        type: string
        required: true
        description: The item's unique identifier
      name:
        type: string
        required: true
        description: The item's name
      cost:
        type: number
        required: true
        description: The item's cost
      emoji:
        type: string
        required: true
        description: The item's emoji
  userItem:
    type: object
    properties: 
      userId:
        type: string
        required: true
        description: The user's Discord ID
      item:
        type: item
        required: true
        description: The user's owned item
      amount:
        type: number
        required: true
        description: Amount of items of this type that the user owns
  userLevel:
    type: object
    properties: 
      userId:
        type: string
        required: true
        description: The user's Discord ID
      guildId:
        type: string
        required: true
        description: The guild's Discord ID
      xp:
        type: number
        required: true
        description: The user's experience in the provided guild
      level:
        type: number
        required: true
        description: The user's level in the provided guild
  user:
    type: object
    properties: 
      id:
        type: string
        required: true
        description: The user's Discord ID
      items:
        type: userItem[]
        required: true
        description: The items the user owns
      balance:
        type: number
        required: true
        description: The user's balance
      userLevel:
        type: userLevel
        required: false
        description: The user's level object (Only if guildId query parameter provided)

/images:
  /generator/{category}:
    get:
      description: Retrieve a generated image
      queryParameters:
        type:
          displayName:  Image Type
          type:         string
          description:  Response Image Type (jpeg, jpg or png)
          example:      png
          required:     false
          default:      png
        userOneId:
          displayName:  User One ID
          type:         string
          description:  Discord ID of the first user for image generation
          example:      634723825048748032
          required:     true
        userTwoId:
          displayName:  User Two ID
          type:         string
          description:  Discord ID of the second user for image generation
          example:      271364449783382016
          required:     true
      responses:
        200:
          body:
            image/png:
              type: generatedImage
        401:
          body:
            application/json:
              type: error
              example:
                status: 401
                message: "UNAUTHORIZED"
                requestUrl: "/v1/images/static/cakegifs"
                timestamp: "2021-05-11T15:40:01.927Z"
        404:
          body:
            application/json:
              type: error
              example:
                status: 404
                message: "NOT_FOUND"
                requestUrl: "/v1/images/generator/not-existing-category"
                timestamp: "2021-05-11T15:40:01.927Z"
        429:
          body:
            application/json:
              type: error
              example:
                status: 429
                message: "TOO_MANY_REQUESTS"
                requestUrl: "/v1/images/static/cakegifs"
                timestamp: "2021-05-11T15:40:01.927Z"
  /static/{category}:
    get:
      description: Retrieve a list of static images
      queryParameters:
        limit:
          displayName:  Limit
          type:         number
          description:  Limit the amount of results
          example:      5
          required:     false
          default:      1
          minimum:      1
          maximum:      10
        random:
          displayName:  Random Results
          type:         boolean
          description:  Set if results should be random or not
          example:      true
          required:     false
          default:      true
      responses:
        200:
          body:
            application/json:
              type: staticImage[]
              example: |
                [
                  {
                    "id": "609953bd92fb00054999109e",
                    "category": "cakegifs",
                    "url": "https://cdn.dankdroid.xyz/api/images/static/cakegifs/609953bd92fb00054999109e.gif"
                  }
                ]
        401:
          body:
            application/json:
              type: error
              example:
                status: 401
                message: "UNAUTHORIZED"
                requestUrl: "/v1/images/static/cakegifs"
                timestamp: "2021-05-11T15:40:01.927Z"
        404:
          body:
            application/json:
              type: error
              example:
                status: 404
                message: "NOT_FOUND"
                requestUrl: "/v1/images/static/not-existing-category"
                timestamp: "2021-05-11T15:40:01.927Z"
        429:
          body:
            application/json:
              type: error
              example:
                status: 429
                message: "TOO_MANY_REQUESTS"
                requestUrl: "/v1/images/static/cakegifs"
                timestamp: "2021-05-11T15:40:01.927Z"
/users:
  /{userId}:
    get:
      description: Retrieve a Dankdroid user by his Discord ID
      queryParameters:
        guildId:
          displayName:  Guild ID
          type:         string
          description:  If provided response object will contain userLevel field
          example:      831529806134247464
          required:     false
      responses:
        200:
          body:
            application/json:
              type: user
              example: |
                {
                  "id": "634723825048748032",
                  "items": [
                    {
                      "userId": "634723825048748032",
                      "item": {
                        "id": "6082f98973ceaef610468cd5",
                        "name": "Coffee",
                        "cost": 200,
                        "emoji": "☕"
                      },
                      "amount": 4
                    }
                  ],
                  "balance": 5204
                }
        401:
          body:
            application/json:
              type: error
              example:
                status: 401
                message: "UNAUTHORIZED"
                requestUrl: "/v1/users/634723825048748032"
                timestamp: "2021-05-11T15:40:01.927Z"
        404:
          body:
            application/json:
              type: error
              example:
                status: 404
                message: "NOT_FOUND"
                requestUrl: "/v1/users/not-existing-user-id"
                timestamp: "2021-05-11T15:40:01.927Z"
        429:
          body:
            application/json:
              type: error
              example:
                status: 429
                message: "TOO_MANY_REQUESTS"
                requestUrl: "/v1/users/634723825048748032"
                timestamp: "2021-05-11T15:40:01.927Z"
    /items:
      get:
        description: Retrieve a Dankdroid user's items
        responses:
          200:
            body:
              application/json:
                type: userItem[]
                example: |
                  [
                    {
                      "userId": "634723825048748032",
                      "item": {
                        "id": "6082f98973ceaef610468cd5",
                        "name": "Coffee",
                        "cost": 200,
                        "emoji": "☕"
                      },
                      "amount": 4
                    }
                  ]
          401:
            body:
              application/json:
                type: error
                example:
                  status: 401
                  message: "UNAUTHORIZED"
                  requestUrl: "/v1/users/634723825048748032/items"
                  timestamp: "2021-05-11T15:40:01.927Z"
          404:
            body:
              application/json:
                type: error
                example:
                  status: 404
                  message: "NOT_FOUND"
                  requestUrl: "/v1/users/not-existing-user-id/items"
                  timestamp: "2021-05-11T15:40:01.927Z"
          429:
            body:
              application/json:
                type: error
                example:
                  status: 429
                  message: "TOO_MANY_REQUESTS"
                  requestUrl: "/v1/users/634723825048748032/items"
                  timestamp: "2021-05-11T15:40:01.927Z"
/levels:
  /{guildId}:
    get:
      description: Retrieve a Dankdroid guild's user level information
      queryParameters:
        sort:
          displayName:  Sort Mode
          type:         string
          description:  Sort by XP ascending or descending (asc or desc)
          example:      desc
          required:     false
          default:      desc
        limit:
          displayName:  Limit
          type:         number
          description:  Limit the amount of results
          example:      5
          required:     false
          default:      10
          minimum:      1
          maximum:      10
      responses:
        200:
          body:
            application/json:
              type: userLevel[]
              example: |
                [
                  {
                    "userId": "634723825048748032",
                    "guildId": "831529806134247464",
                    "xp": 2044,
                    "level": 4
                  },
                  {
                    "userId": "271364449783382016",
                    "guildId": "831529806134247464",
                    "xp": 292,
                    "level": 1
                  },
                  {
                    "userId": "514115479963697170",
                    "guildId": "831529806134247464",
                    "xp": 163,
                    "level": 1
                  },
                  {
                    "userId": "720399747470458892",
                    "guildId": "831529806134247464",
                    "xp": 72,
                    "level": 0
                  }
                ]
        400:
          body:
            application/json:
              type: error
              example:
                status: 400
                message: "BAD_REQUEST"
                requestUrl: "/v1/levels/831529806134247464/?sort=not_a_valid_sort_mode"
                timestamp: "2021-05-11T15:40:01.927Z"
        401:
          body:
            application/json:
              type: error
              example:
                status: 401
                message: "UNAUTHORIZED"
                requestUrl: "/v1/levels/831529806134247464"
                timestamp: "2021-05-11T15:40:01.927Z"
        404:
          body:
            application/json:
              type: error
              example:
                status: 404
                message: "NOT_FOUND"
                requestUrl: "/v1/levels/not-existing-guild-id"
                timestamp: "2021-05-11T15:40:01.927Z"
        429:
          body:
            application/json:
              type: error
              example:
                status: 429
                message: "TOO_MANY_REQUESTS"
                requestUrl: "/v1/levels/831529806134247464"
                timestamp: "2021-05-11T15:40:01.927Z"
    /{userId}:
      get:
        description: Retrieve a Dankdroid user's level information of a specific guild
        responses:
          200:
            body:
              application/json:
                type: userLevel
                example: |
                  {
                    "userId": "634723825048748032",
                    "guildId": "831529806134247464",
                    "xp": 2044,
                    "level": 4
                  }
          401:
            body:
              application/json:
                type: error
                example:
                  status: 401
                  message: "UNAUTHORIZED"
                  requestUrl: "/v1/levels/831529806134247464/634723825048748032"
                  timestamp: "2021-05-11T15:40:01.927Z"
          404:
            body:
              application/json:
                type: error
                example:
                  status: 404
                  message: "NOT_FOUND"
                  requestUrl: "/v1/levels/not-existing-guild-id/634723825048748032"
                  timestamp: "2021-05-11T15:40:01.927Z"
          429:
            body:
              application/json:
                type: error
                example:
                  status: 429
                  message: "TOO_MANY_REQUESTS"
                  requestUrl: "/v1/levels/831529806134247464/634723825048748032"
                  timestamp: "2021-05-11T15:40:01.927Z"